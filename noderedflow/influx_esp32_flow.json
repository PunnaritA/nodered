[
    {
        "id": "e67089b5b99a2410",
        "type": "tab",
        "label": "Get data from ESP32 and send them to InfluxDB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "04a11e84cbbbeb42",
        "type": "mqtt in",
        "z": "e67089b5b99a2410",
        "name": "MQTT2",
        "topic": "sensor_data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "f7dc776198573460",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 160,
        "wires": [
            [
                "0c283e7d6aea1822",
                "e9996974fa67bbc4"
            ]
        ]
    },
    {
        "id": "0c283e7d6aea1822",
        "type": "function",
        "z": "e67089b5b99a2410",
        "name": "sensor",
        "func": "msg.values = msg.payload.split(\",\").map(Number);\n\nif (msg.values.length==4) {\n    msg.payload = {\n        \"sensor_water\": msg.values[0],\n        \"sensor_1\": msg.values[1],\n        \"sensor_2\": msg.values[2],\n        \"sensor_3\": msg.values[3],\n        \"timestamp\": new Date()\n    };\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 180,
        "wires": [
            [
                "d7454f4772571dca",
                "db3952072cacdcbc",
                "714fd7b64bdadfdb",
                "0a0666e6f2a35789",
                "6115020a552bdab2",
                "85b63aca55a6a085",
                "dadc5b752fefcc3e"
            ]
        ]
    },
    {
        "id": "db3952072cacdcbc",
        "type": "debug",
        "z": "e67089b5b99a2410",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 300,
        "wires": []
    },
    {
        "id": "2d20e6416e93a342",
        "type": "function",
        "z": "e67089b5b99a2410",
        "name": "drinks",
        "func": "msg.values = msg.payload.split(\",\").map(Number);\n\nif (msg.values.length == 4) {\n    let now = new Date();\n    let data = [\n        { measurement: \"type_1\", fields: { value: msg.values[0] }, timestamp: now },\n        { measurement: \"type_2\", fields: { value: msg.values[1] }, timestamp: now },\n        { measurement: \"type_3\", fields: { value: msg.values[2] }, timestamp: now },\n        { measurement: \"cup_counter\", fields: { value: msg.values[3] }, timestamp: now }\n    ];\n\n    return [data.map(d => ({ payload: d }))];\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "db3952072cacdcbc",
                "4ccef1ade93ae314",
                "2ba03fd3a82526eb",
                "8ebb65dcc7775f64",
                "181212b0e7d30613"
            ]
        ]
    },
    {
        "id": "6979f2de7b059078",
        "type": "mqtt in",
        "z": "e67089b5b99a2410",
        "name": "MQTT Publisher",
        "topic": "cup_data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0fd776a5d8a0e18a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 240,
        "wires": [
            [
                "2d20e6416e93a342",
                "e9996974fa67bbc4",
                "930de9497bb9564f"
            ]
        ]
    },
    {
        "id": "91342fe1591b79f9",
        "type": "switch",
        "z": "e67089b5b99a2410",
        "name": "",
        "property": "payload.cup_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 180,
        "wires": [
            [
                "a049c410c1f95be6"
            ],
            []
        ]
    },
    {
        "id": "2aa9c11a339c4c0f",
        "type": "function",
        "z": "e67089b5b99a2410",
        "name": "ส่งข้อความ",
        "func": "msg.token = 'eDqn5E5wdy1gFCKH7sjfcZHPZJOgZCnNGkOHLRVKwA8';\nmsg.message = \"The coffee machine have \" + msg.payload.cup_counter + \" cups left.\";\n\nmsg.headers = {\n 'content-type':'application/x-www-form-urlencoded',\n 'Authorization':'Bearer ' + msg.token\n};\nmsg.payload = {\n 'message': msg.message,\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 60,
        "wires": [
            [
                "e55d62e4e0222db9"
            ]
        ]
    },
    {
        "id": "e55d62e4e0222db9",
        "type": "http request",
        "z": "e67089b5b99a2410",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1330,
        "y": 60,
        "wires": [
            [
                "e3cbbaec268e6302"
            ]
        ]
    },
    {
        "id": "e3cbbaec268e6302",
        "type": "debug",
        "z": "e67089b5b99a2410",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "message",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 60,
        "wires": []
    },
    {
        "id": "a049c410c1f95be6",
        "type": "delay",
        "z": "e67089b5b99a2410",
        "name": "",
        "pauseType": "rate",
        "timeout": "2.5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 60,
        "wires": [
            [
                "2aa9c11a339c4c0f"
            ]
        ]
    },
    {
        "id": "d7454f4772571dca",
        "type": "switch",
        "z": "e67089b5b99a2410",
        "name": "",
        "property": "msg.values[0] * msg.values[1] * msg.values[2] * msg.values[3]",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 180,
        "wires": [
            [
                "3349d16eef143c2e",
                "91342fe1591b79f9"
            ],
            [
                "91342fe1591b79f9"
            ]
        ]
    },
    {
        "id": "fcfb2eb55b487543",
        "type": "function",
        "z": "e67089b5b99a2410",
        "name": "ส่งข้อความ",
        "func": "msg.token = 'eDqn5E5wdy1gFCKH7sjfcZHPZJOgZCnNGkOHLRVKwA8';\n\nvar empty_sensors = \"\";\nconst index_to_name = {\n    0: \"Water\",\n    1: \"Powder 1\",\n    2: \"Powder 2\",\n    3: \"Powder 3\"\n};\nfor (let i = 0; i < msg.values.length; i++) {\n    if (msg.values[i] === 0) {\n        empty_sensors += index_to_name[i];\n        if (i != msg.values.length - 1) {\n            empty_sensors += \", \";\n        }\n    }\n}\n\nmsg.message = `${empty_sensors} sensor is empty right now.`;\n\nmsg.headers = {\n 'content-type':'application/x-www-form-urlencoded',\n 'Authorization':'Bearer ' + msg.token\n};\nmsg.payload = {\n 'message': msg.message,\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 120,
        "wires": [
            [
                "8cb58f50950e1746"
            ]
        ]
    },
    {
        "id": "8cb58f50950e1746",
        "type": "http request",
        "z": "e67089b5b99a2410",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "eb975d290961ed7b"
            ]
        ]
    },
    {
        "id": "eb975d290961ed7b",
        "type": "debug",
        "z": "e67089b5b99a2410",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "message",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 120,
        "wires": []
    },
    {
        "id": "3349d16eef143c2e",
        "type": "delay",
        "z": "e67089b5b99a2410",
        "name": "",
        "pauseType": "rate",
        "timeout": "2.5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 820,
        "y": 120,
        "wires": [
            [
                "fcfb2eb55b487543"
            ]
        ]
    },
    {
        "id": "e9996974fa67bbc4",
        "type": "debug",
        "z": "e67089b5b99a2410",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 120,
        "wires": []
    },
    {
        "id": "c9e0acc9d1f34080",
        "type": "inject",
        "z": "e67089b5b99a2410",
        "name": "Simulate Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 840,
        "wires": [
            [
                "654d9fd9196dc8d9",
                "0eb68c89c1308fde"
            ]
        ]
    },
    {
        "id": "654d9fd9196dc8d9",
        "type": "function",
        "z": "e67089b5b99a2410",
        "name": "Generate Random Value",
        "func": "var counter = flow.get(\"cup_counter\") ?? 60;\nvar types = flow.get(\"types_counter\") ?? [0, 0, 0];\nlet rand = Math.floor(Math.random() * 25)\nif (rand === 0 && counter <= 10) {\n    counter = 60;\n} else if (counter > 0) {\n    counter--;\n    types[Math.floor(Math.random()*3)]++;\n}\nmsg.payload = types[0] + \",\" + types[1] + \",\" + types[2] + counter;\n\nflow.set(\"cup_counter\", counter);\nflow.set(\"types_counter\", types);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 880,
        "wires": [
            [
                "8883362a44e711db"
            ]
        ]
    },
    {
        "id": "8883362a44e711db",
        "type": "mqtt out",
        "z": "e67089b5b99a2410",
        "name": "MQTT Publisher",
        "topic": "cup_data",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0fd776a5d8a0e18a",
        "x": 780,
        "y": 880,
        "wires": []
    },
    {
        "id": "0eb68c89c1308fde",
        "type": "function",
        "z": "e67089b5b99a2410",
        "name": "Generate Random Value",
        "func": "let sensors = [0,0,0,0];\n\nfor (let i = 0; i < sensors.length; i++) {\n    sensors[i] = Math.round(Math.random()).toString();\n    msg.payload += sensors[i];\n    if (i != sensors.length - 1) {\n        msg.payload += \", \";\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 800,
        "wires": [
            [
                "b783e7eb5fca5f97"
            ]
        ]
    },
    {
        "id": "b783e7eb5fca5f97",
        "type": "mqtt out",
        "z": "e67089b5b99a2410",
        "name": "MQTT Publisher",
        "topic": "sensor_data",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0fd776a5d8a0e18a",
        "x": 780,
        "y": 800,
        "wires": []
    },
    {
        "id": "c5177c46c0363bd0",
        "type": "inject",
        "z": "e67089b5b99a2410",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 960,
        "wires": [
            [
                "face498c8399478a"
            ]
        ]
    },
    {
        "id": "face498c8399478a",
        "type": "function",
        "z": "e67089b5b99a2410",
        "name": "reset",
        "func": "flow.set(\"cup_counter\", 0);\nflow.set(\"types_counter\", [0, 0, 0]);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "64952159c4be1edd",
        "type": "mqtt in",
        "z": "e67089b5b99a2410",
        "name": "MQTT Publisher",
        "topic": "cup_reset",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0fd776a5d8a0e18a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "face498c8399478a"
            ]
        ]
    },
    {
        "id": "e686da8486adfba8",
        "type": "comment",
        "z": "e67089b5b99a2410",
        "name": "We don't have InfluxDB yet",
        "info": "",
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "714fd7b64bdadfdb",
        "type": "ui_gauge",
        "z": "e67089b5b99a2410",
        "name": "",
        "group": "a9ba106a324ac797",
        "order": 1,
        "width": 9,
        "height": 6,
        "gtype": "wave",
        "title": "Water",
        "label": "",
        "format": "{{msg.payload.sensor_water}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 690,
        "y": 380,
        "wires": []
    },
    {
        "id": "0a0666e6f2a35789",
        "type": "ui_gauge",
        "z": "e67089b5b99a2410",
        "name": "",
        "group": "a9ba106a324ac797",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "wave",
        "title": "Material 1",
        "label": "",
        "format": "{{msg.payload.sensor_1}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 700,
        "y": 420,
        "wires": []
    },
    {
        "id": "6115020a552bdab2",
        "type": "ui_gauge",
        "z": "e67089b5b99a2410",
        "name": "",
        "group": "a9ba106a324ac797",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "wave",
        "title": "Material 2",
        "label": "",
        "format": "{{msg.payload.sensor_2}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 700,
        "y": 460,
        "wires": []
    },
    {
        "id": "85b63aca55a6a085",
        "type": "ui_gauge",
        "z": "e67089b5b99a2410",
        "name": "",
        "group": "a9ba106a324ac797",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "wave",
        "title": "Material 3",
        "label": "",
        "format": "{{msg.payload.sensor_3}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 700,
        "y": 500,
        "wires": []
    },
    {
        "id": "8ebb65dcc7775f64",
        "type": "ui_gauge",
        "z": "e67089b5b99a2410",
        "name": "",
        "group": "84ce9ece496e29a3",
        "order": 1,
        "width": 9,
        "height": 6,
        "gtype": "donut",
        "title": "Cup Counter",
        "label": "cups",
        "format": "{{msg.payload.cup_counter}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#ff4d4d",
            "#fbff00",
            "#34ea8c"
        ],
        "seg1": "1",
        "seg2": "15",
        "x": 450,
        "y": 320,
        "wires": []
    },
    {
        "id": "4ccef1ade93ae314",
        "type": "ui_text",
        "z": "e67089b5b99a2410",
        "group": "84ce9ece496e29a3",
        "order": 3,
        "width": 3,
        "height": 3,
        "name": "",
        "label": "Drink 2",
        "format": "{{msg.payload.type_2}}",
        "layout": "col-center",
        "x": 460,
        "y": 400,
        "wires": []
    },
    {
        "id": "2ba03fd3a82526eb",
        "type": "ui_text",
        "z": "e67089b5b99a2410",
        "group": "84ce9ece496e29a3",
        "order": 4,
        "width": 3,
        "height": 3,
        "name": "",
        "label": "Drink 3",
        "format": "{{msg.payload.type_3}}",
        "layout": "col-center",
        "x": 460,
        "y": 440,
        "wires": []
    },
    {
        "id": "181212b0e7d30613",
        "type": "ui_text",
        "z": "e67089b5b99a2410",
        "group": "84ce9ece496e29a3",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "",
        "label": "Drink 1",
        "format": "{{msg.payload.type_1}}",
        "layout": "col-center",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "dadc5b752fefcc3e",
        "type": "influxdb out",
        "z": "e67089b5b99a2410",
        "influxdb": "e27fadb62251d702",
        "name": "Sent data to InfluxDB",
        "measurement": "TEST",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "test",
        "bucket": "test1",
        "x": 740,
        "y": 240,
        "wires": []
    },
    {
        "id": "930de9497bb9564f",
        "type": "split",
        "z": "e67089b5b99a2410",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": "4",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "8f0f29df5f613d2b"
            ]
        ]
    },
    {
        "id": "8f0f29df5f613d2b",
        "type": "join",
        "z": "e67089b5b99a2410",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "7b245815c65d3918"
            ]
        ]
    },
    {
        "id": "7b245815c65d3918",
        "type": "function",
        "z": "e67089b5b99a2410",
        "name": "function 11",
        "func": "var obj = {} ;\n\nobj[\"Type 1\"] = parseInt(msg.payload[0]) ; \nobj[\"Type 2\"] = parseInt(msg.payload[1]) ; \nobj[\"Type 3\"] = parseInt(msg.payload[2]) ;\nobj[\"Cup Count\"] = parseInt(msg.payload[3]) ;\n\nmsg.payload = obj ;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 540,
        "wires": [
            [
                "88032f11c17fde59",
                "dadc5b752fefcc3e"
            ]
        ]
    },
    {
        "id": "88032f11c17fde59",
        "type": "debug",
        "z": "e67089b5b99a2410",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 540,
        "wires": []
    },
    {
        "id": "f7dc776198573460",
        "type": "mqtt-broker",
        "name": "MQTT2",
        "broker": "202.44.12.37",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0fd776a5d8a0e18a",
        "type": "mqtt-broker",
        "name": "MQTT2 w/ password",
        "broker": "202.44.12.37",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a9ba106a324ac797",
        "type": "ui_group",
        "name": "Status",
        "tab": "48418b79.0f5834",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "84ce9ece496e29a3",
        "type": "ui_group",
        "name": "Drinks",
        "tab": "48418b79.0f5834",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "e27fadb62251d702",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "http://localhost:8086",
        "name": "Local InfluxDB Database (Node-RED Token)",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "timeout": "10",
        "rejectUnauthorized": false
    },
    {
        "id": "48418b79.0f5834",
        "type": "ui_tab",
        "name": "Main",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]